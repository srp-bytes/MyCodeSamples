package Default;

import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.jface.dialogs.IDialogConstants;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.custom.ScrolledComposite;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.events.ControlEvent;
import org.eclipse.swt.events.ControlListener;
import org.eclipse.swt.events.DragDetectListener;
import org.eclipse.swt.events.DragDetectEvent;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Button;

public class DynamicDialog extends Dialog {
	private Text text;
	private Text text_1;

	/**
	 * Create the dialog.
	 * @param parentShell
	 */
	public DynamicDialog(Shell parentShell) {
		super(parentShell);
	}

	/**
	 * Create contents of the dialog.
	 * @param parent
	 */
	@Override
	protected Control createDialogArea(final Composite parent) {
		Composite container = (Composite) super.createDialogArea(parent);
		container.setSize(new Point(800, 900));
		
		ScrolledComposite scrolledComposite = new ScrolledComposite(container, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
		GridData gd_scrolledComposite = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_scrolledComposite.heightHint = 307;
		gd_scrolledComposite.widthHint = 660;
		scrolledComposite.setLayoutData(gd_scrolledComposite);
		scrolledComposite.setExpandHorizontal(true);
		scrolledComposite.setExpandVertical(true);
		
		Group grpManageExternalServers = new Group(scrolledComposite, SWT.NONE);
		grpManageExternalServers.setText("Manage External Servers");
		grpManageExternalServers.setLayout(new FormLayout());
		
		final Group grpMpageservers = new Group(grpManageExternalServers, SWT.NONE);
		grpMpageservers.setText("mPageServers");
		grpMpageservers.setLayout(new GridLayout(4, false));
		FormData fd_grpMpageservers = new FormData();
		fd_grpMpageservers.top = new FormAttachment(0, 25);
		fd_grpMpageservers.right = new FormAttachment(100, -12);
		fd_grpMpageservers.bottom = new FormAttachment(0, 136);
		fd_grpMpageservers.left = new FormAttachment(0, 13);
		grpMpageservers.setLayoutData(fd_grpMpageservers);
		
		Label lblDefault = new Label(grpMpageservers, SWT.NONE);
		lblDefault.setText("Default");
		
		Combo combo = new Combo(grpMpageservers, SWT.NONE);
		new Label(grpMpageservers, SWT.NONE);
		new Label(grpMpageservers, SWT.NONE);
		grpMpageservers.layout();
		Label label = new Label(grpMpageservers, SWT.NONE);
		label.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		label.setText("1");
		
		text = new Text(grpMpageservers, SWT.BORDER);
		text.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		text.setSize(new Point(15, 10));
		
		text_1 = new Text(grpMpageservers, SWT.BORDER);
		text_1.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		text_1.setSize(new Point(15, 10));
		
		Button btnNewButton = new Button(grpMpageservers, SWT.NONE);
		btnNewButton.setText("x-delete");
		new Label(grpMpageservers, SWT.NONE);
		new Label(grpMpageservers, SWT.NONE);
		new Label(grpMpageservers, SWT.NONE);
		
		Composite composite = new Composite(grpMpageservers, SWT.NONE);
		composite.setLayout(new GridLayout(1, false));
		GridData gd_composite = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_composite.widthHint = 53;
		gd_composite.heightHint = 27;
		composite.setLayoutData(gd_composite);
		
		Label label2 = new Label(grpMpageservers, SWT.NONE);
		label.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		label.setText("1");
		
	
		text = new Text(grpMpageservers, SWT.BORDER);
		text.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		text.setSize(new Point(15, 10));
		
		text_1 = new Text(grpMpageservers, SWT.BORDER);
		text_1.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		text_1.setSize(new Point(15, 10));
		grpMpageservers.layout();
		Button btnNewButton2 = new Button(grpMpageservers, SWT.NONE);
		btnNewButton.setText("x-delete");
		new Label(grpMpageservers, SWT.NONE);
		new Label(grpMpageservers, SWT.NONE);
		new Label(grpMpageservers, SWT.NONE);
		
		
		
		Button btnAdd = new Button(composite, SWT.NONE);
		btnAdd.setText("ADD");
		
		btnAdd.addSelectionListener(new SelectionAdapter(){
			public void widgetSelected(SelectionEvent e){
				/*parent.dispose();
				parent.layout();*/
				Label label = new Label(grpMpageservers, SWT.NONE);
				label.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
				label.setText("1");
				
			
				text = new Text(grpMpageservers, SWT.BORDER);
				text.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
				text.setSize(new Point(15, 10));
				
				text_1 = new Text(grpMpageservers, SWT.BORDER);
				text_1.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
				text_1.setSize(new Point(15, 10));
				
				Button btnNewButton = new Button(grpMpageservers, SWT.NONE);
				btnNewButton.setText("x-delete");
				new Label(grpMpageservers, SWT.NONE);
				new Label(grpMpageservers, SWT.NONE);
				new Label(grpMpageservers, SWT.NONE);
				grpMpageservers.layout();
			}
			
		});
		scrolledComposite.setContent(grpManageExternalServers);
		scrolledComposite.setMinSize(grpManageExternalServers.computeSize(SWT.DEFAULT, SWT.DEFAULT));
		
		return container;
	}

	/**
	 * Create contents of the button bar.
	 * @param parent
	 */
	@Override
	protected void createButtonsForButtonBar(Composite parent) {
		createButton(parent, IDialogConstants.OK_ID, IDialogConstants.OK_LABEL,
				true);
		createButton(parent, IDialogConstants.CANCEL_ID,
				IDialogConstants.CANCEL_LABEL, false);
	}

	/**
	 * Return the initial size of the dialog.
	 */
	@Override
	protected Point getInitialSize() {
		return new Point(712, 422);
	}

public static void main(String[] args){
	
	DynamicDialog dydia = new DynamicDialog(new Shell(new Display()));
	dydia.open();
	
}


}
